name: Build and Release

on:
  push:
    tags:
      - "*"
  workflow_dispatch:
    inputs:
      version:
        description: "Version number"
        required: true
        type: string
        default: "0.0.1"

# Add these permissions at the workflow level
permissions:
  contents: write # This allows creating releases and pushing tags
  packages: read

jobs:
  create-macos-release:
    name: Create macOS Release
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Swift
        uses: swift-actions/setup-swift@v2

      - name: Cache Swift packages
        uses: actions/cache@v4
        with:
          path: |
            .build
            ~/Library/Caches/org.swift.swiftpm
            ~/Library/Developer/Xcode/DerivedData
          key: ${{ runner.os }}-spm-${{ hashFiles('**/Package.resolved') }}
          restore-keys: |
            ${{ runner.os }}-spm-

      - name: Build Release Binaries
        run: |
          NUM_CORES=$(sysctl -n hw.ncpu)
          swift build -c release --arch arm64 -j $NUM_CORES
          swift build -c release --arch x86_64 -j $NUM_CORES
        env:
          SWIFT_DETERMINISTIC_HASHING: 1

      - name: Create Universal Binary
        run: |
          lipo -create \
            .build/arm64-apple-macosx/release/HoopProxy \
            .build/x86_64-apple-macosx/release/HoopProxy \
            -output ./HoopProxy

      - name: Upload macOS Artifact
        uses: actions/upload-artifact@v4
        with:
          name: macos-binary
          path: ./HoopProxy

  create-linux-release:
    name: Create Linux Release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Cache Swift packages
        uses: actions/cache@v4
        with:
          path: |
            .build
            ~/.cache/swiftpm
          key: ${{ runner.os }}-spm-${{ hashFiles('**/Package.resolved') }}
          restore-keys: |
            ${{ runner.os }}-spm-

      - name: Build
        run: |
          NUM_CORES=$(nproc)
          swift build -c release -j $NUM_CORES
        env:
          SWIFT_DETERMINISTIC_HASHING: 1

      - name: Upload Linux Artifact
        uses: actions/upload-artifact@v4
        with:
          name: linux-binary
          path: .build/release/HoopProxy

  create-release:
    needs: [create-macos-release, create-linux-release]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }} # Explicitly use the token

      - name: Create Tag if Manually Triggered
        if: github.event_name == 'workflow_dispatch'
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git tag -a v${{ github.event.inputs.version }} -m "Release v${{ github.event.inputs.version }}"
          git push origin v${{ github.event.inputs.version }}

      - name: Download Artifacts
        uses: actions/download-artifact@v4

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            macos-binary/HoopProxy-macos
            linux-binary/HoopProxy-linux
          name: Release ${{ github.event.inputs.version || github.ref_name }}
          body: Release ${{ github.event.inputs.version || github.ref_name }}
          tag_name: ${{ github.event.inputs.version && format('v{0}', github.event.inputs.version) || github.ref_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
